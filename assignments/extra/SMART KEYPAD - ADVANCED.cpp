/*
SMART KEYPAD - ADVANCED
Given a long vector of strings,
print the strings that contain the strings generated by numeric string str.

string searchIn [] = {
            "prateek", "sneha", "deepak", "arnav", "shikha", "palak",
            "utkarsh", "divyam", "vidhi", "sparsh", "akku"
    };
For example, if the input is 26 and the string is coding,
then output should be coding since 26 can produce co which is contained in coding.

Input Format:
A numeric string str

Constraints:
len(str) < 10
No of strings in the vector < 10

Output Format:
Each matched string from the given vector.

Sample Input:
34
Sample Output:
vidhi
divyam
sneha
Explanation:
34 will result into combinations :

*dg         *eg         *fg
*dh            *eh         *fh
*di            *ei         *fi
Corresponding strings are output.

vidhi contains dh
divyam contains di
sneha contains eh
*/
#include<iostream>
using namespace std;
char table[][5] = { " ", ".+@$", "abc", "def", "ghi", "jkl" , "mno", "pqrs" , "tuv", "wxyz" };
char searchIn [][10] = {"prateek", "sneha", "deepak", "arnav", "shikha", "palak",
                        "utkarsh", "divyam", "vidhi", "sparsh", "akku"};
void find(char b[],int j)
{
    for(int x=0;x<11;x++)
    {
        int t=0;
        for(int y=0;searchIn[x][y]!='\0';y++)
        {
            int p=y;
            while(searchIn[x][p]==b[t] && b[t]!='\0')
            {
                p++;t++;
            }
            if(b[t]=='\0')
            {
                cout<<searchIn[x]<<endl;
                break;
            }
            else
            {
                t=0;
            }
        }
    }
}
void keypad(char a[],int i,char b[],int j)
{
    if(a[i]=='\0')
    {
        b[j]='\0';
        find(b,j);
        return;
    }
    for(int x=0;table[a[i]-48][x]!='\0';x++)
    {
        b[j]=table[a[i]-48][x];
        keypad(a,i+1,b,j+1);
    }
    //keypad(a,i+1,b,j);
    return;
}
int main()
{
    char a[100],b[100];
    cin>>a;
    keypad(a,0,b,0);
	return 0;
}
